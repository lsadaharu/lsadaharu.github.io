{"pages":[],"posts":[{"title":"","text":"渗透windows与linux常用命令渗透windows常用DOS命令 查看本机ip信息: ipconfig 释放ip: ipconfig/release 重新获取ip: ipconfig/renew 查看系统信息: systeminfo 查看局域网计算机列表: arp -a 查看目录信息: dir 切换目录: cd 目录名 打开某个文件: start 文件名 打开某个网页: start URL 创建文件内容: echo xxxx &gt; x.txt 查看文件内容: type xxx.txt 创建目录: md 目录名 删除文件夹: rd 文件夹名 删除文件: del 文件名 复制文件: copy 文件名 移动文件或文件夹: move 文件(夹)名 路径 以树形列出文件夹结构: tree 文件夹名 查看以启动的服务: net start 开启或停止某个服务: net start(stop) 服务名 查看端口占用进程情况: netstat -ano 查看本机用户信息: net user 查看用户组信息: net localgroup 创建用户username: net user username/add 创建隐藏用户username: net user username$/add 将用户username添加到管理用户组: `net localgroup administrators username/add 更改用户username密码: net user username 更改的密码 删除用户username: net user username/delete 激活(禁用)用户username: net user username/active:yes(no) 开启3389: REG ADD HKLM\\SYSTEM\\CurrentControlSet\\Control\\Terminal&quot; &quot;Server /v fDenyTSConnections /t REG_DWORD /d 00000000 /f或者wmic RDTOGGLE WHERE ServerName='%COMPUTERNAME%' call SetAllowTSConnections 1 关闭防火墙: netsh firewall set opmode mode=disable或者netsh advfirewall set allprofiles state off 渗透linux常见命令 显示主机信息: uname -a 查看主机名: hostname 查看ip信息: ipconfig 查看当前路径: pwd 查看当前目录文件: ls 查看目录文件详细信息ls -l 创建目录: mkdir 目录名 创建新文件: touch 文件名 为文件创建软连接: ln -s 源文件或者目录 链接文件或者目录 复制文件或者目录: cp 源文件或目录 目标文件或目录 删除文件或目录: rm -f强制删除不提醒，rm -r递归删除整个目录树,rm -i删除文件或目录提醒。 移动文件: mv 源文件或目录 查找文件: find -name 文件名 查看文件内容: cat+文件名 分页显示文件内容: more+文件名 查看文件属性: file+文件名 gzip压缩打包以及解压:gizp -9+文件，最大压缩比压缩。保留源文件压缩gzip -c 文件名 &gt; 文件名.gz解压gzip -dv+文件名.gz，保留源文件解压gzip -cd 文件名.gz &gt; 压缩文件存放的目录地址 bzip2压缩打包: bzip2+文件名。保留源文件压缩bzip2 -k+文件名.解压bzip2 -dv+文件名.bzip2 .保留源文件解压: bzip2 -kd+文件名.bzip2 tar压缩解压: 以gzip格式压缩tar -zcvf newfile.tar.gz 源文件 gzip格式解压 tar -zxvf 压缩包名 -C 解压的文件放置的目录 以bzip2格式压缩 tar -jcvf newfile.tar.bzip2 源文件 以bzip2格式解压 tar -jxvf 压缩包名 -C 解压的文件放置的目录 查看压缩包中的内容tar -tvf 压缩包名 改变文件权限: chmod (r-&gt;4 w-&gt;2 x-&gt;1)777 文件名或者按user(所有者)-&gt;u，group(组)-&gt;u，others(其他人)-&gt;u,三套属性a.r-&gt;(可读),w-&gt;(可写),x-&gt;(可执行)赋予权限，如chmod u+r test.c-&gt;赋予test.c所有者可读权限.chmod a+w test.c-&gt;赋予test.c所有者，组，以及其他人可写权限。 更改文件/目录所属的拥有者和组: chown 拥有者名:组名 文件或目录名 只修改所属组: chogrp -R 组名 文件或目录名 添加用户: adduser 用户名 修改密码 passwd 用户名删除用户 userdel 用户名 查看目前登陆身份: whoami 查看目前登陆的用户和组: id 显示磁盘可读的情况: df -h 显示最后登陆的用户: last 查看进程: ps -aux 进程的动态情况 top 终止进程: kill -9 PID 显示进程ID的网络接口: netstat -tulpn 启动ip转发: echo '1' &gt; /proc/sys/net/ipv4/ip_forward","link":"/2019/07/27/windows与linux命令/"},{"title":"Hello World","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post1$ hexo new \"My New Post\" More info: Writing Run server1$ hexo server More info: Server Generate static files1$ hexo generate More info: Generating Deploy to remote sites1$ hexo deploy More info: Deployment","link":"/2019/05/24/hello-world/"},{"title":"Linux下完成hexo+github pages搭建个人博客","text":"安装nodejs1$ apt-get install gcc g++ make -y &amp;&amp; wget https://nodejs.org/dist/v8.1.2/node-v8.1.2.tar.gz &amp;&amp; tar zxf node-v8.1.2.tar.gz &amp;&amp; cd node-v8.1.2 &amp;&amp; ./configure &amp;&amp; make &amp;&amp; make install 安装npm1$ sudo apt-get install npm 安装git1$ sudo apt-get install git 注册github账号注册github 在个人设置中创建存储库（Your repositories) Ower: username(登陆github的用户名) / repository name:username.github.io 在终端生成ssh key 在当前用户目录创建.ssh文件夹 1$ mkdir ~/.ssh 打开./ssh 1$ cd ~/.ssh 设置密码 1$ ssh-keygen -t rsa 按下回车后在~/.ssh文件夹下生成两个ssh key(id_rsa,id_rsa.pub) 生成公钥作为本机ssh连接github的口令 如报错为：Could not open a connection to your authentication agent。执行下列命令可解决： 1$ ssh-agent bash 进入github个人设置页面，点击SSH AND GPGKEYS添加一个SSH KEY标题自拟，KEY的内容为在终端输入下面命令，复制密钥（注意复制内容包括头部ssh-rsa与尾部的xxx@xxx）添加完成。 1$ cat ~/.ssh/id_rsa.pub 配置git,username和email是github上的用户名和注册用的邮箱12$ git config --global user.name \"username\"$ git config --global user.email \"email\" 测试是否能ssh连接1$ ssh -T git@github.com 若报错消息为： The authenticity of host ‘github.com (xxx.xxx.xxx.xxx)’ can’t be established.RSA key fingerprint is SHA256:nThbg6kXUpJWGl7E1IGOCspRomTxdCARLviKw6E5SY8.Are you sure you want to continue connecting (yes/no)?时不能按回车，选择yes即可，在执行上面代码尝试连接，若信息为：You’re successfully authenticated,but github does not provide shell access.则为成功连接。 搭建本地Hexo 安装hexo 1$ sudo npm install hexo-cli -g 创建blog网站 12345$ hexo init blog$ cd blog$ npm install$ hexo server$ npm instsall hexo-deployer-git -save 配置网站的deploy 打开网站配置文件_config.yml 1$ cd _config.yml 1234$ type:git $ type:git $ repo:（在github中打开建立的项目复制ssh形式的地址） $ branch:（默认为master） 测试123$ hexo clean$ hexo g$ hexo s 打开浏览器输入localhost:4000查看效果 部署到github1$ hexo d 搭建完成。参考链接：https://blog.csdn.net/ctsas/article/details/73694849","link":"/2019/05/27/my_first/"}],"tags":[],"categories":[]}